// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack
// Author: John Rollinson, 11/17/2017

/**
 * A library that supports various program execution services.
 */
 
class Sys 
{
    //DESCRIPTION: Performs all the initializations required by the OS.
	//PRECONDITION: Assumes that all other libraries have been implemented.
	//POSTCONDITION: The OS has been initialized.
    function void init() 
    {
        do Math.init();
        do Output.init();
        do Screen.init();
        do Keyboard.init();
        do Memory.init();
        do Main.main();
        do Sys.halt();
        return;
    }

    //DESCRIPTION: Halts the program execution.
	//PRECONDITION: Assumes that the OS has been initialized.
	//POSTCONDITION: The program has been stopped.
    function void halt() 
    {
        while(true)
        {
			
        }
        
        return;
    }

    //DESCRIPTION: Waits approximately duration milliseconds and then returns.
	//PRECONDITION: Assumes that the OS has been initialized.
	//POSTCONDITION: Resumes after the wait duration has passed.
    function void wait(int duration) 
    {
        var int i, j;
        let i = 0;
        
        while(i < duration) 
        {
            let j = 0;
            
            while(j < 100)
            {
                let j = j + 1;
            }
            
            let i = i + 1;
        }
        
        return;
    }

    //DESCRIPTION: Displays the given error code in the form 
    //					"ERR<errorCode>", and halts the program's execution.
	//PRECONDITION: Assumes that the OS has been initialized.
	//POSTCONDITION: An error code has been thrown and the program has
	//					been halted().
    function void error(int errorCode) 
	{
        do Output.printString("Err");
        do Output.printInt(errorCode);
        do Sys.halt();
        return;
    }
}
